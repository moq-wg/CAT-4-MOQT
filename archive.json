{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2025-05-01T01:08:49.703150+00:00",
  "repo": "wilaw/CAT-4-MOQT",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    }
  ],
  "issues": [
    {
      "number": 1,
      "id": "I_kwDOODoKls6uBWw2",
      "title": "Token renewal",
      "url": "https://github.com/wilaw/CAT-4-MOQT/issues/1",
      "state": "OPEN",
      "author": "gwendalsimon",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "I volunteer to write some text to explain how the token renewal can be implemented.",
      "createdAt": "2025-03-14T08:40:21Z",
      "updatedAt": "2025-03-14T08:40:21Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 2,
      "id": "I_kwDOODoKls6uBiHC",
      "title": "No token at connection but token for actions",
      "url": "https://github.com/wilaw/CAT-4-MOQT/issues/2",
      "state": "OPEN",
      "author": "gwendalsimon",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "One of the limitations of having a unique global token to rule all future actions is that the token's expiration time must be long to anticipate the actions in the future. It can be preferrable to have tokens with short expiration time for specific action, but it contradicts the global unique token.\n\nI would like to define an alternative workflow, where the token at WebTransport is optional, but a token must be carried in the actions (SUBSCRIBE, FETCH, ...) as authentication-parameter.",
      "createdAt": "2025-03-14T08:59:41Z",
      "updatedAt": "2025-03-14T09:15:38Z",
      "closedAt": null,
      "comments": [
        {
          "author": "wilaw",
          "authorAssociation": "OWNER",
          "body": "Some ideas on how to achieve this:\n1. You give the player two tokens - one for the connection and another for actions. \n2. In the moqt claim, we add an action for \"CONNECT\". We then rely on future implementation of composite claims so that each  moqt action can be combined with an existing CAT claim such as time, geo etc. ",
          "createdAt": "2025-03-14T09:15:37Z",
          "updatedAt": "2025-03-14T09:15:37Z"
        }
      ]
    },
    {
      "number": 3,
      "id": "I_kwDOODoKls6uEJaW",
      "title": "does the expiration of a token also apply to the ongoing SUBSCRIBE?",
      "url": "https://github.com/wilaw/CAT-4-MOQT/issues/3",
      "state": "OPEN",
      "author": "gwendalsimon",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Let's say an end-user connects to a Relay with a token that expires in 60 minutes. What I understand is that, if the user emits a SUBSCRIBE 65 minutes later, then the Relay will reject the request. However, if the user sends a SUBSCRIBE to a track immediately after the connection, it got the stream. 60 minutes later, should the Relay abruptly stop the track delivery? It would require the Relay to keep trace of the finishing time of each ongoing track. ",
      "createdAt": "2025-03-14T14:02:01Z",
      "updatedAt": "2025-03-18T13:50:53Z",
      "closedAt": null,
      "comments": [
        {
          "author": "wilaw",
          "authorAssociation": "OWNER",
          "body": "As currently defined, the expiry time applies only to the initial connection. This means that if the client connects  to the relay with a 60min token at 10:00, then the client can do all the subscribing that it wants, but at 11:00, the relay will terminate the connection, which will effectively end all tracks being published and or subscribed in that session. ",
          "createdAt": "2025-03-18T13:50:51Z",
          "updatedAt": "2025-03-18T13:50:51Z"
        }
      ]
    },
    {
      "number": 4,
      "id": "I_kwDOODoKls6uFN6-",
      "title": "token revocation",
      "url": "https://github.com/wilaw/CAT-4-MOQT/issues/4",
      "state": "OPEN",
      "author": "gwendalsimon",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "It can happen that the content distributor would like to revoke a token. It is an offline action, which can impact the ongoing sessions.\n\nIf the full token is revoked, then it should mean closure of the WebTransport or MoQ connection. This can happen when the content distributor has identified the end-user as a leak.\n\nIf only some MoQT actions are revoked, then the related actions should be stopped: for example the Relay should stop the subscription to a track whose grant has been revoked. The use cases are less clear, but, I can think of a countermeasure where an identified leak can no longer get the top video profile but can still access a subset of degraded tracks.",
      "createdAt": "2025-03-14T15:49:20Z",
      "updatedAt": "2025-03-14T15:49:20Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 5,
      "id": "I_kwDOODoKls6uY6_m",
      "title": "Add a new CONNECTION action to the moq claim",
      "url": "https://github.com/wilaw/CAT-4-MOQT/issues/5",
      "state": "OPEN",
      "author": "wilaw",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "Right now, we assume the existing CAT claims (exp, catu, geohash etc) apply to the initial connection via either Web transport or native QUIC.\n\nThis relationship becomes brittle if we introduce COMPOSITE claims, in which there may be multiple 'exp' claims bound to Actions, while some remain unbound and are assumed to apply to the connection.\n\nAn improvement here would be to make 2 changes\n1. Add in CONNECTION as a new ACTION type.\n2. Allow claims to be composite. \n\nFor example the following combination lets you connect from anywhere before a certain time,  but only publish from Germany with a prefix match of example.com\n\nMOQ CONNECTION allowed AND exp  = 1742229697 \nMOQ PUBLISH (prefix match 'example.com') AND catgeoiso3166 = DE",
      "createdAt": "2025-03-17T16:47:05Z",
      "updatedAt": "2025-03-18T13:23:33Z",
      "closedAt": null,
      "comments": [
        {
          "author": "wilaw",
          "authorAssociation": "OWNER",
          "body": "One problem I discovered with this approach is that you cannot repeat a claim in a CWT token. So you cannot have two expiry or geo claims, one for connect, another for publish. ",
          "createdAt": "2025-03-18T13:23:32Z",
          "updatedAt": "2025-03-18T13:23:32Z"
        }
      ]
    },
    {
      "number": 6,
      "id": "I_kwDOODoKls6vEm70",
      "title": "Add TRACK_STATUS_REQUEST action",
      "url": "https://github.com/wilaw/CAT-4-MOQT/issues/6",
      "state": "OPEN",
      "author": "afrind",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "See https://github.com/moq-wg/moq-transport/issues/720\n\nAlternately it could share SUBSCRIBE, or we could have a blanket action like CONSUME which would cover SUBSCRIBE, FETCH and TRACK_STATUS_REQUEST.",
      "createdAt": "2025-03-21T04:20:12Z",
      "updatedAt": "2025-03-21T23:56:44Z",
      "closedAt": null,
      "comments": [
        {
          "author": "wilaw",
          "authorAssociation": "OWNER",
          "body": "Adding a TRACk_STATUS_REQUEST action is an easy move.\n\nI really like the idea of CONSUME. It is a logical aggregation which is likely to be highly common and it reduces the need to define a moqt claim for each child action. We should add SUBSCRIBE_ANNOUNCES to that pool. \n\nShould we have a counterpoint PRODUCE, which would aggregate ANNOUNCE and PUBLISH? ",
          "createdAt": "2025-03-21T10:04:34Z",
          "updatedAt": "2025-03-21T10:04:34Z"
        },
        {
          "author": "afrind",
          "authorAssociation": "NONE",
          "body": "Maybe three actions: PRODUCE (Publish, Announce), CONSUME (Track Status Request, Subscribe, Fetch), DISCOVER (Subscribe Announces)?",
          "createdAt": "2025-03-21T23:56:44Z",
          "updatedAt": "2025-03-21T23:56:44Z"
        }
      ]
    },
    {
      "number": 7,
      "id": "I_kwDOODoKls6vyvuO",
      "title": "When are claims evaluated in long duration sessions?",
      "url": "https://github.com/wilaw/CAT-4-MOQT/issues/7",
      "state": "OPEN",
      "author": "wilaw",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "CAT claims are written assuming a request, which occurs at a single point in time. However MOQT has actions which can persist over the life of the session, which may last a long time. This issue raises the need to evaluate the claims within CAT and define how they might be applied to long running sessions. \n\nFor example, if a claim binds a connection to an IP address and that IP address later changes while the session is still active due to QUIC connection migration, should the connection be dropped? \n\nAt what interval is the server required to evaluate the IP address - with each incoming QUIC frame, or MOQT object or some other interval or event? ",
      "createdAt": "2025-03-26T11:54:34Z",
      "updatedAt": "2025-03-26T11:54:34Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 8,
      "id": "I_kwDOODoKls6zTjzr",
      "title": "A wrapper for composite claims",
      "url": "https://github.com/wilaw/CAT-4-MOQT/issues/8",
      "state": "OPEN",
      "author": "wilaw",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "How do we bind ACTIONs to differentiated base CAT claims? For example , you can connect and SUBSCRIBE from anywhere in Europe after 4pm  but you can only PUBLISH after 6pm in Germany?\n\nOne solution would be to define a wrapper to hold different CAT tokens and allow them to be assigned to different ACTIONS. \nThe wrapper needs to be signed to be prevent tampering, but not encrypted, since the core CAT tokens it includes are already encrypted. \n\n![Image](https://github.com/user-attachments/assets/284afdbd-c4e7-4eda-bf45-e2c9f068bf68)\n",
      "createdAt": "2025-04-21T11:48:21Z",
      "updatedAt": "2025-04-21T11:48:21Z",
      "closedAt": null,
      "comments": []
    }
  ],
  "pulls": []
}